@function grid-breakpoint-key($name) {
    @return if($name == 'default', "", "-#{$name}");
}

.container {
    display: block;
    width: 100%;
    max-width: $grid-container;
    margin-left: auto;
    margin-right: auto; 

    &.gutter {
        padding-left: rem($grid-gutter);
        padding-right: rem($grid-gutter);

        .row {
            margin-left: rem(-$grid-gutter);
            margin-right: rem(-$grid-gutter);
    
            > * {
                padding: rem($grid-gutter);
            }
        }
    }
}

.row {
    display: flex;
    flex-wrap: wrap;
    flex-basis: 100%;

    > * {
        width: 100%;
    }
}

.custom-col-sidebar {
    flex: 0 0 12.6%;
    max-width: 12.6%;
    min-height: 100vh;
    @include mediaQuery($xxxl) {
        flex: 0 0 15%;
        max-width: 15%;
    }
    @include mediaQuery($xxl) {
        flex: 0 0 17%;
        max-width: 17%;
    }
    @include mediaQuery($ipad) {
        flex: 0 0 20%;
        max-width: 20%;
    }
}
.custom-col-maincontent {
    flex: 0 0 87.4%;
    max-width: 87.4%;
    @include mediaQuery($xxxl) {
        flex: 0 0 85%;
        max-width: 85%;
    }
    @include mediaQuery($xxl) {
        flex: 0 0 83%;
        max-width: 83%;
    }
    @include mediaQuery($ipad) {
        flex: 0 0 80%;
        max-width: 80%;
    }
    @include mediaQuery($lg) {
        flex: 0 0 100%;
        max-width: 100%;
    }
}

@each $breakpoint in map-keys($grid-breakpoints) {
    $breakpoint-key: grid-breakpoint-key($breakpoint);

    @for $i from 1 through $grid-columns {
        .col#{$breakpoint-key}-#{$i} {
            @if($breakpoint-key == '') {
                width: percentage($i/$grid-columns);
            } @else {
                @include mediaQuery(map-get($grid-breakpoints, $breakpoint)){
                    width: percentage($i/$grid-columns);
                }
            }
        }
    }
}